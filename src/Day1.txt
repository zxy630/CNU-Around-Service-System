### Day 1
#### 一、 什么是人工智能
1. 监督学习(Supervised Learning): 数据 + 教
2. 无监督学习(Unsupervised Learning): 对数据进行归纳推理(Inductive Reasoning)
3. 增强学习(Reinforced Learning): 环境 + 反馈进行更新优化
4. 人工智能爆发的三要素ABC: 算法(Algorithm) + 大数据(Big Data) + 算力(Computing)

#### 二、 CPU算力 vs GPU算力
1. CPU: 只有一个ALU，单线程，速度慢
2. GPU: 多个ALU，多线程，速度快

#### 三、 算法
1. 深度神经网络(DNN)：如 让机器学会加减乘除
2. 图神经网络(GNN)：如 图片分类、定位
3. 对抗生成网络(GAN)：如 通过音乐生成一段舞蹈
4. 情感分析、语音识别(RNN)：如 语音转换为文字

#### 四、 Jupyter Notebook
1. 基本用法：新建cell、重启、运行、保存
2. Markdown标记语言：<br>
    - # 一级标题
    - *斜体* 或 _斜体_
    - **粗体**
    - 高亮
    - ***加粗斜体***
    - ~~删除线~~
    - ~删除线~

#### 五、 Python基础语法
1. 三种基本数据类型：整数(int)、浮点数(float)、字符串(string)【type()返回数据类型】
2. 最简单的函数print()的使用
```
print("你好呀！")
print(0.5)
print(1+2*4)
print(3**2)
print(3//2)
```
3. 运算符号<br>

|符号|含义|例子|
|--|--|----|
| ** | 幂 |a ** 3|
| * |乘法|a * 3|

4. 浮点数精度问题
    - 比特(bit): 二进制位
    - 字节(byte): 1byte = 8bit
    - 1K = 1024 byte
    - 1M = 1024 K
    - 由于计算机存储时只能存储二进制位，而有些小数例如0.6在做二进制转换时会出现无限循环的形式，超过了计算机最大存储单位，故计算机会自动截取，造成精度丢失
5. len()函数求字符串长度
```
print(len("hello"))
```
6. 类型的转换
    - int()
    - float()
    - str()
    - 注：int()是向下取整
7. round()函数：元整函数，四舍五入，在0.5时靠近最近的一个偶数
8. 变量
    - 变量名：最好取言简意赅、望文生义的优秀变量名
    - 赋值：左边 = 右边，最后一次赋值的有效
    - 多重赋值：x,y,z = 1,2,3
    
```
#练习二（不是标准答案！！仅供参考）
print("这件商品原价",40/0.8,"元,","亏了",40/0.8*0.2,"元")

x=int(input("请输入一个华氏温度："))#转换成整数型
print("该温度对应的摄氏度为",x*9/5+32,"℃")

a,b=30,30#设置商品售价均为30元
print("第一件商品的盈利了20%，实际上是赚了",30/1.2*0.2,",第二件商品亏损了20%，实际上是亏了",30/0.8*0.2)
```
9. 条件判断
    - 布尔逻辑：True、False
    - 逻辑判断：==、 !=、 >=、 <=、 >、 < 
    - 与逻辑and，或逻辑or，非逻辑not
    - in表示子集关系（连续），is表示同一个元素（值相同，数据类型相同，地址相同，慎用！）
    - 代码块表示同级，缩进表示从属关系
10. input()从键盘中得到的是字符串类型，根据需要可用类型转换函数改变
```
age = int(input("请输入你的年龄："))
if age >= 18:
    print("你已经是个成年人了")
else:
    print("你还是个孩子")
```
11. if、elif、else的用法
```
age = int(input("请输入你的年龄："))
if age >= 18 and age <= 50:
    print("你已经是个成年人了")
elif age > 50:
    print("你已经是个老年人了")
else:
    print("你还是个孩子")
```
12. for循环重复代码块给定的次数
```
total = 0
for i in [1,2,3,4,5]:
    total += i
print(total)
#建立高频次数的循环
for i in range(5,10):
    print(i)
```
13. range()：有开头无结尾
    - range(a): 生成从0开始到a-1的一个数组
    - range(2,6): 生成从a到b-1的一个数组
    - range(a,b,c): 生成从a开始，每次增加c直到马上将要通过b为止的一个数组
14. 循环嵌套：一般用变量i、j、k
```
for i in ["apple","banana","cherry"]:
    print(i)
    for j in i:
        print(j)
#打印1-3的乘法口诀表
for i in range(1,4,1):
    for j in range(1,10,1):
        print(i,"*",j,"=",i*j)
    print("\n")
```
15. 转义字符：反斜杠\
    - \t: 制表符
    - \n: 换行符
    - \\: 反斜杠